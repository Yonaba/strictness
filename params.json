{
  "name": "Strictness",
  "tagline": "Tracks declaration and assignment of globals in Lua",
  "body": "strictness\r\n===========\r\n\r\n[![Build Status](https://travis-ci.org/Yonaba/strictness.png)](https://travis-ci.org/Yonaba/strictness)\r\n[![Coverage Status](https://coveralls.io/repos/Yonaba/strictness/badge.png?branch=master)](https://coveralls.io/r/Yonaba/strictness?branch=master)\r\n[![Lua](https://img.shields.io/badge/Lua-5.1%2C%205.2%2C%205.3%2C%20JIT-blue.svg)]()\r\n[![License](http://img.shields.io/badge/Licence-MIT-brightgreen.svg)](LICENSE)\r\n\r\nWith the __Lua__ programming language, undeclared variables are not detected until runtime, as Lua will not complain when loading code.\r\nThis is releated to the convention that Lua uses : [global by default](http://www.lua.org/pil/1.2.html). In other words, when a variable is not recognized as *local*, it will be\r\ninterpreted as a *global* one, and will involve a lookup in the global environment `_G` (for Lua 5.1). Note that this behaviour has been removed starting from Lua 5.2, which strictly speaking has no globals, because of its [lexical scoping](http://www.luafaq.org/#T8.2.1).\r\n\r\n*strictness* is a module to track *access and assignment* to undefined variables in your code. It *enforces* to declare globals and modules variables before\r\nassigning them values. As such, it helps having a better control on the scope of variables across the code.\r\n\r\n*strictness* is mostly meant to work with Lua [5.1](http://www.lua.org/versions.html#5.1), but it is compatible with newer versions of Lua.\r\n\r\n##Installation\r\n\r\n####Git\r\n\r\n    git clone git://github.com/Yonaba/strictness\r\n\r\n####Download\r\n\r\n* See [releases](https://github.com/Yonaba/strictness/releases)\r\n\r\n####LuaRocks\r\n\r\n    luarocks install strictness\r\n    \r\n####MoonRocks\r\n\r\n    moonrocks install strictness\r\n\r\nor \r\n\r\n    luarocks install strictness --server=http://rocks.moonscript.org strictness\r\n\r\n\r\n## Documentation\r\n\r\nSee [tutorial.md](doc/tutorial.md).\r\n\r\n##Tests\r\n\r\nThis project has specification tests. To run these tests, execute the following command from the project root folder:\r\n\r\n    lua spec/tests.lua\r\n\r\n##Similar projects\r\n\r\nFeel free to check those alternate implementations, from with *strictness* takes some inspiration:\r\n\r\n* [strict.lua](http://rtfc.googlecode.com/svn-history/r2/trunk/lua-5.1/etc/strict.lua) which is included in the official Lua 5.1 distribution,\r\n* [pl.strict](https://github.com/stevedonovan/Penlight/blob/master/lua/pl/strict.lua) which is part of [Penlight](https://github.com/stevedonovan/Penlight),\r\n  \r\n##License\r\nThis work is under [MIT-LICENSE](http://www.opensource.org/licenses/mit-license.php)<br/>\r\n*Copyright (c) 2013-2014 Roland Yonaba*.\r\nSee [LICENSE](LICENSE).\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/Yonaba/strictness/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")",
  "google": "UA-33850683-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}